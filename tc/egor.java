
import java.util.Arrays; 

/** 
 * Generated by Contest helper plug-in 
 * Actual solution is at the bottom 
 */ 
public class KingdomXCitiesandVillages { 
    public double determineLength(int[] cityX, int[] cityY, int[] villageX, int[] villageY) { 
        int villageCount = villageX.length; 
        int cityCount = cityX.length; 
        double result = 0; 
        for (int i = 0; i < villageCount; i++) { 
            double minCityDistance = Double.POSITIVE_INFINITY; 
            for (int j = 0; j < cityCount; j++) 
                minCityDistance = Math.min(minCityDistance, Math.hypot(cityX[j] - villageX[i], cityY[j] - villageY[i])); 
            double probability = 1; 
            double[] villageDistances = new double[villageCount]; 
            for (int j = 0; j < villageCount; j++) { 
                if (j == i) 
                    villageDistances[j] = Double.POSITIVE_INFINITY; 
                else 
                    villageDistances[j] = Math.hypot(villageX[j] - villageX[i], villageY[j] - villageY[i]); 
            } 
            Arrays.sort(villageDistances); 
            for (int j = 0; j < villageCount; j++) { 
                if (villageDistances[j] > minCityDistance) { 
                    result += probability * minCityDistance; 
                    break; 
                } 
                double currentProbability = probability / (j + 2); 
                result += currentProbability * villageDistances[j]; 
                probability -= currentProbability; 
            } 
        } 
        return result; 
    } 
}
