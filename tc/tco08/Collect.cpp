// BEGIN CUT HERE

// END CUT HERE
#line 5 "Collect.cpp"

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <climits>
//#include <ext/hash_map>


using namespace std;
using namespace __gnu_cxx;



#define REP(i,n) for(int i = 0; i < (n); i++)

#define REPV(i, n) for (int i = (n) - 1; i >= 0; i--)
#define FOR(i, a, b) for(int i = (a); i <= (b); i++)
#define FORV(i, a, b) for(int i = (a); i >= (b); i--)

#define FE(i,t) for (typeof((t).begin())i=(t).begin();i!=(t).end();i++)
#define FEV(i,t) for (typeof((t).rbegin())i=(t).rbegin();i!=(t).rend();i++)

#define SZ(a) (int((a).size()))
#define two(x) (1 << (x))
#define twoll(x) (1LL << (x))
#define ALL(a) (a).begin(), (a).end()
#define CLR(a) (a).clear()


#define pb push_back
#define PF push_front
#define ST first
#define ND second
#define MP(x,y) make_pair(x, y)

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<string> vs;
typedef queue<int> qi;

inline int count_bit(int n){return (n == 0)?0:1+count_bit(n&(n-1));}
inline bool bit_set(int a, int b){return (a&two(b));}

double tb[]={

3.50000000000000000000,4.25000000000000000000,4.66666666666666696273,4.94444444444444464182,5.12962962962962976121,5.27469135802469146768,5.39557613168724259367,5.49631344307270186533,5.58026120256058444369,5.65021766880048659232,5.70851472400040549360,5.75709560333367065255,5.79757966944472524773,5.83131639120393696629,5.85943032600328006509,5.88285860500273294349,5.90238217083561078624,5.91865180902967491505,5.93220984085806168906,5.94350820071505125952,5.95292350059587604960,5.96076958382989641194,5.96730798652491323253,5.97275665543742739771,5.97729721286452253537,5.98108101072043485402,5.98423417560036163820,5.98686181300030106911,5.98905151083358422426,5.99087625902798670552,5.99239688252332225460,5.99366406876943447202,5.99472005730786161593,5.99560004775655119857,5.99633337313045888806,5.99694447760871529596,5.99745373134059533982,5.99787810945049582045,5.99823175787541273962,5.99852646489617669090,5.99877205408014724242,5.99897671173345603535,5.99914725977787988143,5.99928938314823323452,5.99940781929019362195,5.99950651607516061148,5.99958876339596702820,5.99965730282997178335,5.99971441902497648613,5.99976201585414692374,5.99980167987845547373,5.99983473323204563599,5.99986227769337077120,5.99988523141114171722,5.99990435950928446829,5.99992029959106965009,5.99993358299255774568,5.99994465249379782534,5.99995387707816441036,5.99996156423180337924,5.99996797019316918664,5.99997330849430721145,5.99997775707858860272,5.99998146423215672485,5.99998455352679727071,5.99998712793899713347,5.99998927328249731517,5.99999106106874702249,5.99999255089062177859,5.99999379240885133413,5.99999482700737551966,5.99999568917281234093,5.99999640764400954396,5.99999700637000721315,5.99999750530833875217,5.99999792109028184939,5.99999826757523457843,5.99999855631269518597,5.99999879692724569225,5.99999899743937081809,5.99999916453280857098,5.99999930377734003173,5.99999941981444973038,5.99999951651204099790,5.99999959709336749825,5.99999966424447261915,5.99999972020372673853,5.99999976683643865272,5.99999980569703161848,5.99999983808085968207,5.99999986506738292036,5.99999988755615198954,5.99999990629679302856,5.99999992191399389441,5.99999993492832750519,5.99999994577360595827,5.99999995481133829855,5.99999996234278132334,5.99999996861898399203,5.99999997384915317866
	
	
	
	,8.75385802469136820037,12.06904981059162906831,14.65886337424273122565,16.79669750141625783613,18.71238841627819482483,20.38584389370719662793,21.85277944061418153865,23.13389687136949390833,24.23637730370420584336,25.17721144822602141744,25.97232635750829388144,26.63979159647844241476,27.19813298830011660812,27.66435026789135775971,28.05327950324302577201,28.37757380755854441645,28.64790400774085910029,28.87321831998928090002,29.06099851338145612090,29.21749064069746637529,29.34790487937174674471,29.45658541550870168635,29.54715351321753402658,29.62262741761230699922,29.68552258459779480404,29.73793534954391404312,29.78161271858816050440,29.81801056001982530574,29.84834211243720147877,29.87361841565969911017,29.89468200681644560746,29.91223500223840758849,29.92686249995237091071,29.93905208222435376797,29.94921006791954098958,29.95767505626056603774,29.96472921335841022028,29.97060767768958200463,29.97550639801240990323,29.97958866497480556745,29.98299055412532609921,29.98582546175945040545,29.98818788479281849391,29.99015657065687179283,29.99179714221181924927,29.99316428517527199915,29.99430357097866206573,29.99525297581512717215,29.99604414651234307598,29.99670345542683236317,29.99725287952227503752,29.99771073293510426083,29.99809227744586337394,29.99841023120485417053,29.99867519267073134870,29.99889599389227257120,29.99907999491022891903,29.99923332909185447193,29.99936110757656493320,29.99946758964708948270,29.99955632470587829630,29.99963027058824138749,29.99969189215677900506,29.99974324346407072994,29.99978603622004058593,29.99982169685007349358,29.99985141404170718715,29.99987617836808695415,29.99989681530676222110,29.99991401275562452611,29.99992834396301333300,29.99994028663583733874,29.99995023886314626793,29.99995853238596055235,29.99996544365496120577,29.99997120304582409744,29.99997600253814056259,29.99998000211516568925,29.99998333509600811908,29.99998611258003933244,29.99998842714999369718,29.99999035595829965928,29.99999196329856232524,29.99999330274879483227,29.99999441895728224949,29.99999534913104071165,29.99999612427588502328,29.99999677022990596242,29.99999730852494295164,29.99999775710412919238,29.99999813092014377958,29.99999844243342650429,29.99999870202784535422,29.99999891835656740113,29.99999909863049651904,29.99999924885869972968,29.99999937404892236259,29.99999947837405400719,29.99999956531171108054,29.99999963775983502501
	,9.97646604938272574259,13.97700133211663775512,17.14089049614233317698,19.80893087267541829988,22.19734389213185821177,24.27331162217130611225,26.11189949281359190536,27.69325628981678377727,29.04790099534485037225,30.19516357572349107841,31.15839924195739030210,31.96374351045713879671,32.63584684372499822302,33.19630374162547070682,33.66349339260398210172,34.05287365219763984214,34.37737930405208430784,34.64780964152458153649,34.87317195736909525294,35.06097544380391894947,35.21747901501552036052,35.34789894705357937710,35.45658235132216162810,35.54715191184976674776,35.62262657135582344381,35.68552213268382899969,35.73793510585907284849,35.78161258600913896544,35.81801048730233105744,35.84834207226122515522,35.87361839331834545419,35.89468199432124606574,35.91223499521499462617,35.92686249598735059863,35.93905207997742223824,35.94921006664215212822,35.95767505553224907544,35.96472921294219560195,35.97060767745120557493,35.97550639787573345529,35.97958866489635454400,35.98299055408023150449,35.98582546173356178087,35.98818788477782248947,35.99015657064812501176,35.99179714220688452997,35.99316428517237653750,35.99430357097686083989,35.99525297581398319835,35.99604414651163608596,35.99670345542632787783,35.99725287952193752972,35.99771073293499767942,35.99809227744579231967,35.99841023120477956354,35.99867519267077398126,35.99889599389234007276,35.99907999491032484229,35.99923332909179407579,35.99936110757648322078,35.99946758964706816641,35.99955632470589961258,35.99963027058827691462,35.99969189215684650662,35.99974324346403875552,35.99978603621996597894,35.99982169684999178116,35.99985141404161481660,35.99987617836794839832,35.99989681530656326913,35.99991401275556057726,35.99992834396301333300,35.99994028663591194572,35.99995023886324929663,35.99995853238598897406,35.99996544365506423446,35.99997120304585962458,35.99997600253830398742,35.99998000211520832181,35.99998333509600456637,35.99998611257995406731,35.99998842714995817005,35.99999035595828189571,35.99999196329856232524,35.99999330274876285785,35.99999441895721474793,35.99999534913101939537,35.99999612427582462715,35.99999677022980648644,35.99999730852485413379,35.99999775710409011253,35.99999813092003364545,35.99999844243344426786,35.99999870202798035734,35.99999891835663134998,35.99999909863051072989,35.99999924885866420254,35.99999937404881222847,35.99999947837405045448,35.99999956531185318909
	,11.18090563557388072979,15.86124300724141988894,19.61347534338498022066,22.84381252251129978958,25.68943640121635496598,28.20284981681152913779,30.38606264899782161137,32.27169701047570526953,33.87308607083819111949,35.22088454309089655681,36.34863732630844168625,37.28986315080837954383,38.07466824647848113727,38.72881734957812938092,39.27398939442203840144,39.72831562804462635086,40.10692646519586190834,40.42243751685646202532,40.68536413651973049355,40.90446993331877933997,41.08705820562594368539,41.23921514196214843651,41.36601260611702457481,41.47167716663251013642,41.55973097000049421013,41.63310914071740143072,41.69425761684824038866,41.74521468052225259271,41.78767890035246779235,41.82306575025637584986,41.85255479186344729214,41.87712899321152804077,41.89760749433921205309,41.91467291194777544661,41.92889409328897443174,41.94074507774048754527,41.95062089811701611097,41.95885074843088347052,41.96570895702545556105,41.97142413085454393240,41.97618677571190914932,41.98015564642680885754,41.98346303868924422886,41.98621919890755549432,41.98851599908954312923,41.99042999924107988363,41.99202499936740196063,41.99335416613975269229,41.99446180511656478984,41.99538483759720719490,41.99615403133089586163,41.99679502610909764826,41.99732918842428119888,41.99777432368674112695,41.99814526973896278150,41.99845439144920078434,41.99871199287441214665,41.99892666072876323824,41.99910555060724703935,41.99925462550599064571,41.99937885458837172337,41.99948237882359336481,41.99956864901958653036,41.99964054084961873059,41.99970045070806179410,41.99975037559005386356,41.99979197965836164030,41.99982664971530965659,41.99985554142955379575,41.99987961785812728976,41.99989968154824282465,41.99991640129030656681,41.99993033440853906768,41.99994194534023250753,41.99995162111707003305,41.99995968426422621178,41.99996640355349342144,41.99997200296144228560,41.99997666913451155324,41.99998055761198401115,41.99998379800984338317,41.99998649834144259785,41.99998874861806541503,41.99999062384851100660,41.99999218654044597088,41.99999348878345983849,41.99999457398641311556,41.99999547832165802674,41.99999623193493647477,41.99999685994577447445,41.99999738328806131449,41.99999781940675092073,41.99999818283898633808,41.99999848569915172902,41.99999873808275907550,41.99999894840235725724,41.99999912366849486034,41.99999926972358110788,41.99999939143653193696,41.99999949286370792834
	,12.36039189910070668077,17.72770841695964705309,22.07906718385284605688,25.87681106920315698972,29.18665837402291529656,32.13853053091873590574,34.68218518430872165936,36.86030591032035630406,38.70370256036375877784,40.24945757617775399240,41.54025295283210539310,42.61661674434346025464,43.51377422102233794021,44.26145729160104735911,44.88454134373593973351,45.40378245205549490038,45.83648472906033077834,46.19707039127976599957,46.49755858516246576073,46.74796546153832821346,46.95663787525285925994,47.13053155929333826180,47.27544296481199381788,47.39620247020217647105,47.49683539165526013903,47.58069615964404164288,47.65058013301020878316,47.70881677749825655610,47.75734731457782800135,47.79778942881319636626,47.83149119067683585627,47.85957599223061009752,47.88297999352537459572,47.90248332793755992043,47.91873610661479432338,47.93228008884562285630,47.94356674070458268488,47.95297228392058741520,47.96081023660001818598,47.96734186383346809635,47.97278488652788297486,47.97732073877352121372,47.98110061564420192326,47.98425051303699007121,47.98687542753079071645,47.98906285627572998465,47.99088571356307397764,47.99240476130277244238,47.99367063441874847740,47.99472552868210328825,47.99560460723527910432,47.99633717269635013736,47.99694764391370682688,47.99745636992797415132,47.99788030827289020408,47.99823359022737179203,47.99852799185601526233,47.99877332654665451628,47.99897777212239446953,47.99914814343527069695,47.99929011952942659036,47.99940843294120185192,47.99950702745087482981,47.99958918954236253285,47.99965765795171535046,47.99971471495985753108,47.99976226246653254748,47.99980188538901870743,47.99983490449082523810,47.99986242040913708706,47.99988535034110270772,47.99990445861753585177,47.99992038218077539113,47.99993365181745730297,47.99994470984807293235,47.99995392487348055965,47.99996160406106326946,47.99996800338438163180,47.99997333615377215210,47.99997778012807003734,47.99998148343980375330,47.99998456953306202877,47.99998714127769261495,47.99998928439822520886,47.99999107033166012570,47.99999255860983282673,47.99999379884134498297,47.99999483236799591168,47.99999569364039331276,47.99999641136680139653,47.99999700947210357072,47.99999750789351082858,47.99999792324452130288,47.99999826937016678130,47.99999855780814073114,47.99999879817396220005,47.99999899847853157553,47.99999916539861999354,47.99999930449888552175,47.99999942041547740246
	,13.51372724479887921234,19.57873116698310411721,24.54400046630214049515,28.90768989307592562454,32.72589653821890465224,36.08184079534306221149,38.98527576516397630257,41.45613652030628060174,43.53778701811307882963,45.27945453827550181813,46.73242577311210510516,47.94358396227387686395,48.95296164902842406264,49.79412843468565341709,50.49510537845864632800,51.07925402763934386030,51.56604489259615320407,51.97170403831687934826,52.30975335332124842580,52.59146112399480443855,52.82621760210921024736,53.02184800135540854171,53.18487333432728547677,53.32072777855992029572,53.43393981545057869198,53.52828317953664338802,53.60690264961177575742,53.67241887467529437572,53.72701572889576482339,53.77251310741329604070,53.81042758951090121400,53.84202299125891499898,53.86835249271602776844,53.89029374392989524267,53.90857811994160186941,53.92381509995092869758,53.93651258329240505418,53.94709381941058978782,53.95591151617556135989,53.96325959681306017046,53.96938299734428312604,53.97448583112007725049,53.97873819260004069065,53.98228182716682255204,53.98523485597231541533,53.98769571331058614305,53.98974642775837651243,53.99145535646511717687,53.99287946372092505953,53.99406621976729070411,53.99505518313945628961,53.99587931928294182171,53.99656609940240059586,53.99713841616866716322,53.99761534680685315379,53.99801278900616097189,53.99834399083816549592,53.99861999236571818983,53.99884999363779058967,53.99904166136472127846,53.99920138447024697825,53.99933448705846217308,53.99944540588239050294,53.99953783823539055220,53.99961486519642761550,53.99967905432963988233,53.99973254527461818952,53.99977712106259986058,53.99981426755171298737,53.99984522295968503158,53.99987101913339415660,53.99989251594424644054,53.99991042995350198908,53.99992535829522921631,53.99993779857942399758,53.99994816548266385325,53.99995680456928681679,53.99996400380763361682,53.99997000317303985639,53.99997500264377237045,53.99997916886978543971,53.99998264072516462875,53.99998553393716349547,53.99998794494792520027,53.99998995412278190997,53.99999162843543132340,53.99999302369622711240,53.99999418641358772675,53.99999515534492644520,53.99999596278767910462,53.99999663565596108583,53.99999719637993678134,53.99999766364980047229,53.99999805304181421661,53.99999837753482267999,53.99999864794603610108,53.99999887328797143482,53.99999906107360914120,53.99999921756099752201,53.99999934796749556654
	,14.64537777285625530510,21.42139531615835679190,27.02220721102487388521,31.94362360967866365513,36.26972024765424862380,40.04080822440012354946,43.29227117637947941375,46.05420296352534137441,48.37321148985554941646,50.30997381251698641336,51.92478274319457653974,53.27061380763987585851,54.39217019414338949446,55.32680674545402155218,56.10567188206485411683,56.75472646918773023117,57.29560536558779659799,57.74633779788999987659,58.12194816304447186894,58.43495680200960862294,58.69579733485554129402,58.91316444566777477121,59.09430370470991533693,59.24525308725432637402,59.37104423937730501848,59.47587019948095843347,59.56322516623436769123,59.63602097186159056719,59.69668414321790095300,59.74723678601453258352,59.78936398834584053930,59.82446999028846335023,59.85372499190670936287,59.87810415992162660359,59.89842013326866521084,59.91535011105683139476,59.92945842588095928249,59.94121535490071295271,59.95101279575021635537,59.95917732979117431569,59.96598110815967430653,59.97165092346710935090,59.97637576955594340689,59.98031314129681135228,59.98359428441360563511,59.98632857034485255099,59.98860714195344456812,59.99050595162800192384,59.99208829302342849132,59.99340691085343735267,59.99450575904369031832,59.99542146587005930769,59.99618455489224544408,59.99682046241046151636,59.99735038534159770052,59.99779198778495015176,59.99815998982079179314,59.99846665818395052838,59.99872221515309433926,59.99893517929396580257,59.99911264941219712910,59.99926054117689488976,59.99938378431355090470,59.99948648692816988159,59.99957207244078460917,59.99964339370046673139,59.99970282808355648285,59.99975235673648654711,59.99979363061360260190,59.99982802551156879645,59.99985668792625403967,59.99988057327180257516,59.99990047772629964129,59.99991706477208452952,59.99993088731004320380,59.99994240609090212502,59.99995200507595427553,59.99996000423050901418,59.99996667019185281333,59.99997222515936812215,59.99997685430030003317,59.99998071191722459616,59.99998392659741597299,59.99998660549835705069,59.99998883791427317647,59.99999069826223063728,59.99999224855147161861,59.99999354045995403339,59.99999461704940273421,59.99999551420797416768,59.99999626184052914368,59.99999688486606430615,59.99999740405539228050,59.99999783671236741611,59.99999819726154015598,59.99999849771690918487,59.99999874809783051433,59.99999895674862671058,59.99999913062350742621,59.99999927551890976929
};

class Collect {
	public:
	double expected(int N, int K) {
		return tb[(N-1)*100+K-1];
	}
	
// BEGIN CUT HERE
	public:
	void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); }
	private:
	template <typename T> string print_array(const vector<T> &V) { ostringstream os; os << "{ "; for (typename vector<T>::const_iterator iter = V.begin(); iter != V.end(); ++iter) os << '\"' << *iter << "\","; os << " }"; return os.str(); }
	void verify_case(int Case, const double &Expected, const double &Received) { cerr << "Test Case #" << Case << "..."; if (Expected == Received) cerr << "PASSED" << endl; else { cerr << "FAILED" << endl; cerr << "\tExpected: \"" << Expected << '\"' << endl; cerr << "\tReceived: \"" << Received << '\"' << endl; } }
	void test_case_0() { int Arg0 = 1; int Arg1 = 1; double Arg2 = 3.5; verify_case(0, Arg2, expected(Arg0, Arg1)); }
	void test_case_1() { int Arg0 = 1; int Arg1 = 2; double Arg2 = 4.249999999999999; verify_case(1, Arg2, expected(Arg0, Arg1)); }
	void test_case_2() { int Arg0 = 2; int Arg1 = 2; double Arg2 = 6.262345679012343; verify_case(2, Arg2, expected(Arg0, Arg1)); }

// END CUT HERE

};
//int fact[11];
//int cnk[11][11];
//vi state[11];
//int vid[8010];
//int start[11];
//int ids[two(25)];
//double prob[8010];
//double best[8010];
//
//int pos[8010];
//
//
//double dp[2][8010];
//void proc(int N){
//
//	fact[0]=1;
//	FOR (i, 1, N)
//		fact[i]=fact[i-1]*i;
//
//	memset(cnk, 0, sizeof(cnk));
//	cnk[0][0]=1;
//	FOR (i, 1, N){
//		cnk[i][0]=1;
//		FOR (j, 1, i){
//			cnk[i][j]=cnk[i-1][j-1]+cnk[i-1][j];
//		}
//	}
//	REP(i, 11)
//		CLR(state[i]);
//
//	int c=0;
//	vi v(6);
//	start[0]=0;
//	for (int n=0; n<=N; ++n)
//	for (v[0]=0; v[0]<=n; ++v[0]){
//		for (v[1]=0; v[0]+v[1]<=n; ++v[1])
//			for (v[2]=0; v[0]+v[1]+v[2]<=n; ++v[2])
//				for (v[3]=0; v[0]+v[1]+v[2]+v[3]<=n; ++v[3])
//					for (v[4]=0; v[0]+v[1]+v[2]+v[3]+v[4]<=n; ++v[4]){
//						v[5]=n-accumulate(v.begin(), v.end()-1, 0);
//						state[n].pb(v[0]+(v[1]<<4)+(v[2]<<8)+(v[3]<<12)+(v[4]<<16)+(v[5]<<20));
//						prob[c]=(fact[n]/fact[v[0]]/fact[v[1]]/fact[v[2]]/fact[v[3]]/fact[v[4]]/fact[v[5]])/pow(6., n);
//						pos[c]=n;
//						vid[c]=state[n].back();
//						ids[state[n].back()]=c++;
//					}
//		start[n+1]=c;
//	}
//	
//	for (int j=0; j<start[N]; ++j)
//		dp[0][j]=dp[1][j]=0.;
//	double s=0;
//	for (int j=start[N]; j<start[N+1]; ++j){
//		dp[0][j]=0.;
//		for (int i=0; i<6; ++i)
//			dp[0][j]=max(dp[0][j], double(i+1)*(vid[j]>>(4*i)&0xf));
//		s+=dp[0][j]*prob[j];
//	}
//
//	for (int i=0; i<100; ++i){
//		int id, nid;
//		id=i%2, nid=(id+1)%2;
//		for (int j=0; j<=N; ++j)
//			for (int k=start[j]; k<start[j+1]; ++k){
//				int tot=1;
//				dp[nid][k]=0.;
//
//				best[0]=dp[id][k];
//				for (int nj=1; nj<start[N-j+1]; ++nj){//state if we roll nj and add it to k. We decide the best option to do with this roll by removing a dice and using a previously computed roll (thanks to a certain order in the states)
//					best[nj]=dp[id][ids[vid[nj]+vid[k]]];
//					if (vid[nj]&0x00000f)best[nj]=max(best[nj], best[ids[vid[nj]-0x000001]]);
//					if (vid[nj]&0x0000f0)best[nj]=max(best[nj], best[ids[vid[nj]-0x000010]]);
//					if (vid[nj]&0x000f00)best[nj]=max(best[nj], best[ids[vid[nj]-0x000100]]);
//					if (vid[nj]&0x00f000)best[nj]=max(best[nj], best[ids[vid[nj]-0x001000]]);
//					if (vid[nj]&0x0f0000)best[nj]=max(best[nj], best[ids[vid[nj]-0x010000]]);
//					if (vid[nj]&0xf00000)best[nj]=max(best[nj], best[ids[vid[nj]-0x100000]]);
//
//				}
//				for (int nj=start[N-j]; nj<start[N-j+1]; ++nj)//N-J dices thrown
//					dp[nid][k]+=best[nj]*prob[nj];
//				//printf("%x => %lf\n", vid[k], dp[nid][k]);
//
//			}
//		printf(",%.20lf", dp[nid][0]);
//	}
//	printf("\n");
//}

// BEGIN CUT HERE
int main(){
		for (int i=0; i<=10; ++i)
			proc(i);

	Collect ___test; 
	___test.run_test(-1); 
} 
// END CUT HERE
